load_epinow <- function(target_region, dir, date) {
  out <- list()
  path <- file.path(dir, target_region, date)
  out$summarised <- readRDS(file.path(path, "summarised_estimates.rds"))
  out$samples <- readRDS(file.path(path, "estimate_samples.rds"))
  out$fit <- readRDS(file.path(path, "model_fit.rds"))
  out$args <- readRDS(file.path(path, "model_args.rds"))
  out$observations <- readRDS(file.path(path, "reported_cases.rds"))
  return(out)
} 


simulate_crowd_cases <- function(crowd_rt) {
  locs <- unique(crowd_rt$location)
  sims <- map(locs, function(loc) {
    dt <- copy(crowd_rt)[location %in% loc]
    tars <- unique(dt$target)
    sims <- map(tars, function(tar) {
      message("Simulating cases for ", tar, " in ", loc)
      # get data for target region
      dt_tar <- copy(dt)[target %in% tar]
      dt_tar <- dt_tar[, .(date, sample, value)]

      # load fit EpiNow2 model object
      model <- load_epinow(
        target_region = loc,
        dir = here("rt-forecast", "data", "samples", tar),
        date = target_date
      )

      # extracted estimated Rt and cut to length of forecast
      est_R <- model$samples[variable == "R"]
      est_R <- est_R[, .(date = as.Date(date), sample, value)]
      est_R <- est_R[sample <= max(dt_tar$sample)]
      est_R <- est_R[date < min(dt_tar$date)]

      # join estimates and forecast
      forecast_rt <- rbindlist(list(est_R, dt_tar))
      setorder(forecast_rt, sample, date)

      sims <- simulate_infections(model, forecast_rt)
      sims$plot <- plot(sims)
      return(sims)
    })
    names(sims) <- tars
    return(sims)
  })
  names(sims) <- locs
  return(sims)
}

extract_samples <- function(output, target) {
  samples <- map(names(output), function(loc) {
    dt <- output[[loc]][[target]]$samples[, region := loc]
    dt <- dt[variable %in% "reported_cases"]
    dt <- dt[, .(region, date, sample, value)]
    setorder(dt, region, date, sample)
    return(dt)
  })

  samples <- rbindlist(samples)
  return(samples)
}